{"version":3,"sources":["webpack:///./node_modules/echarts/lib/component/tooltip.js","webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/component/gridSimple.js","webpack:///./node_modules/echarts/lib/component/dataset.js","webpack:///./node_modules/zrender/lib/core/timsort.js","webpack:///./node_modules/zrender/lib/contain/polygon.js","webpack:///./node_modules/zrender/lib/animation/Animator.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./node_modules/zrender/lib/core/GestureMgr.js","webpack:///./node_modules/zrender/lib/mixin/Transformable.js","webpack:///./node_modules/zrender/lib/graphic/Image.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./node_modules/echarts/lib/helper.js","webpack:///./node_modules/zrender/lib/core/matrix.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/component/axisPointer/globalListener.js","webpack:///./node_modules/echarts/lib/scale/Ordinal.js","webpack:///./node_modules/zrender/lib/graphic/Displayable.js","webpack:///./node_modules/zrender/lib/mixin/Eventful.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/CoordinateSystem.js","webpack:///./node_modules/zrender/lib/core/PathProxy.js","webpack:///./node_modules/echarts/lib/scale/Time.js","webpack:///./node_modules/zrender/lib/core/env.js","webpack:///./node_modules/echarts/lib/util/graphic.js","webpack:///./node_modules/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./node_modules/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./node_modules/echarts/lib/lang.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/zrender/lib/graphic/Style.js","webpack:///./node_modules/zrender/lib/config.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/zrender/lib/animation/Animation.js","webpack:///./node_modules/echarts/lib/chart/helper/createListFromArray.js","webpack:///./node_modules/zrender/lib/tool/path.js","webpack:///./node_modules/echarts/lib/util/number.js","webpack:///./node_modules/echarts/lib/model/mixin/dataFormat.js","webpack:///./node_modules/echarts/lib/model/mixin/lineStyle.js","webpack:///./node_modules/zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./node_modules/echarts/lib/echarts.js","webpack:///./node_modules/zrender/lib/core/vector.js","webpack:///./node_modules/zrender/lib/tool/color.js","webpack:///./node_modules/zrender/lib/graphic/Gradient.js","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipView.js","webpack:///./node_modules/echarts/lib/model/Model.js","webpack:///./node_modules/zrender/lib/animation/Clip.js","webpack:///./src/pages/index/page.vue?d183","webpack:///src/pages/index/page.vue","webpack:///./src/pages/index/page.vue?fbd3","webpack:///./src/pages/index/page.vue?19f4","webpack:///./src/pages/index/index.js","webpack:///./node_modules/zrender/lib/graphic/shape/Ring.js","webpack:///./node_modules/zrender/lib/graphic/LinearGradient.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/zrender/lib/core/log.js","webpack:///./node_modules/zrender/lib/core/curve.js","webpack:///./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./node_modules/zrender/lib/graphic/shape/Sector.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/model/Series.js","webpack:///./node_modules/zrender/lib/graphic/helper/poly.js","webpack:///./node_modules/echarts/lib/model/mixin/itemStyle.js","webpack:///./node_modules/zrender/lib/graphic/helper/roundRect.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/zrender/lib/Layer.js","webpack:///./node_modules/zrender/lib/graphic/helper/image.js","webpack:///./node_modules/zrender/lib/core/event.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./node_modules/echarts/lib/util/clazz.js","webpack:///./node_modules/echarts/lib/component/title.js","webpack:///./node_modules/echarts/lib/component/axis/AxisView.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/zrender/lib/contain/quadratic.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/zrender/lib/zrender.js","webpack:///./node_modules/echarts/lib/stream/Scheduler.js","webpack:///./node_modules/echarts/lib/model/Component.js","webpack:///./node_modules/zrender/lib/core/util.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/zrender/lib/animation/easing.js","webpack:///./node_modules/zrender/lib/graphic/Text.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixShadow.js","webpack:///./node_modules/echarts/lib/model/Global.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/ExtensionAPI.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/zrender/lib/contain/util.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/zrender/lib/contain/windingLine.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polygon.js","webpack:///./node_modules/echarts/lib/util/throttle.js","webpack:///./node_modules/echarts/lib/util/component.js","webpack:///./node_modules/echarts/lib/model/globalDefault.js","webpack:///./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./node_modules/echarts/lib/scale/Interval.js","webpack:///./node_modules/echarts/lib/model/referHelper.js","webpack:///./node_modules/echarts/lib/scale/Log.js","webpack:///./node_modules/zrender/lib/graphic/shape/Arc.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/scale/helper.js","webpack:///./node_modules/echarts/lib/chart/bar.js","webpack:///./node_modules/zrender/lib/contain/line.js","webpack:///./node_modules/zrender/lib/core/BoundingRect.js","webpack:///./node_modules/zrender/lib/animation/requestAnimationFrame.js","webpack:///./node_modules/echarts/lib/loading/default.js","webpack:///./node_modules/echarts/lib/model/mixin/areaStyle.js","webpack:///./node_modules/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./node_modules/echarts/lib/layout/barGrid.js","webpack:///./node_modules/zrender/lib/graphic/mixin/RectText.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/zrender/lib/contain/arc.js","webpack:///./node_modules/echarts/lib/util/symbol.js","webpack:///./node_modules/zrender/lib/graphic/helper/text.js","webpack:///./src/pages/index/page.vue?9ddf","webpack:///./node_modules/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./node_modules/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./node_modules/echarts/lib/component/axis.js","webpack:///./node_modules/zrender/lib/Storage.js","webpack:///./node_modules/echarts/lib/view/Component.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/chart/bar/barItemStyle.js","webpack:///./node_modules/echarts/lib/export.js","webpack:///./node_modules/echarts/lib/visual/aria.js","webpack:///./node_modules/zrender/lib/mixin/Animatable.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/theme/light.js","webpack:///./node_modules/echarts/lib/chart/helper/labelHelper.js","webpack:///./node_modules/zrender/lib/graphic/shape/Rect.js","webpack:///./node_modules/echarts/lib/model/OptionManager.js","webpack:///./node_modules/zrender/lib/graphic/shape/Line.js","webpack:///./node_modules/zrender/lib/mixin/Draggable.js","webpack:///./node_modules/echarts/lib/component/axisPointer.js","webpack:///./node_modules/zrender/lib/graphic/Path.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./node_modules/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./node_modules/zrender/lib/dom/HandlerProxy.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/processor/dataStack.js","webpack:///./node_modules/zrender/lib/Handler.js","webpack:///./node_modules/zrender/lib/graphic/shape/Polyline.js","webpack:///./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./node_modules/zrender/lib/graphic/CompoundPath.js","webpack:///./node_modules/zrender/lib/core/LRU.js","webpack:///./node_modules/zrender/lib/Element.js","webpack:///./node_modules/zrender/lib/contain/path.js","webpack:///./node_modules/zrender/lib/graphic/shape/Circle.js","webpack:///./node_modules/zrender/lib/graphic/Pattern.js","webpack:///./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./node_modules/zrender/lib/graphic/RadialGradient.js","webpack:///./node_modules/zrender/lib/core/guid.js","webpack:///./node_modules/echarts/lib/model/mixin/boxLayout.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/util/model.js","webpack:///./node_modules/echarts/lib/scale/Scale.js","webpack:///./node_modules/zrender/lib/container/Group.js","webpack:///./node_modules/zrender/lib/core/bbox.js","webpack:///./node_modules/echarts/lib/model/mixin/colorPalette.js","webpack:///./node_modules/echarts/lib/chart/bar/helper.js","webpack:///./node_modules/zrender/lib/contain/cubic.js","webpack:///./node_modules/zrender/lib/contain/text.js","webpack:///./node_modules/echarts/lib/view/Chart.js","webpack:///./node_modules/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/zrender/lib/Painter.js","webpack:///./node_modules/echarts/lib/util/format.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/zrender/lib/tool/transformPath.js","webpack:///./node_modules/echarts/lib/theme/dark.js","webpack:///./node_modules/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js","webpack:///./node_modules/echarts/lib/stream/task.js","webpack:///./node_modules/echarts/lib/util/layout.js","webpack:///./node_modules/echarts/lib/component/axis/AxisBuilder.js","webpack:///./node_modules/echarts/lib/preprocessor/backwardCompat.js","webpack:///./node_modules/echarts/lib/visual/seriesColor.js","webpack:///./node_modules/echarts/lib/model/mixin/textStyle.js","webpack:///./node_modules/echarts/lib/component/axisPointer/viewHelper.js"],"names":["echarts","__webpack_require__","registerAction","type","event","update","zrUtil","layout","gridModel","axisModel","opt","grid","coordinateSystem","axis","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","position","axisPosition","axisDim","dim","rect","getRect","rectBound","x","width","y","height","idx","left","right","top","bottom","onZero","axisOffset","get","posBound","onZeroCoord","toGlobalCoord","dataToCoord","Math","max","min","rotation","PI","dirMap","labelDirection","tickDirection","nameDirection","labelOffset","retrieve","labelInside","labelRotate","z2","exports","graphic","extendComponentView","render","ecModel","this","group","removeAll","add","Rect","shape","style","defaults","fill","getItemStyle","silent","registerPreprocessor","option","xAxis","yAxis","ComponentModel","ComponentView","_sourceHelper","detectSourceFormat","_sourceType","SERIES_LAYOUT_BY_COLUMN","extend","defaultOption","seriesLayoutBy","sourceHeader","dimensions","source","optionUpdated","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","minRunLength","n","r","makeAscendingRun","array","lo","hi","compare","runHi","reverseRun","t","binaryInsertionSort","start","mid","pivot","gallopLeft","value","length","hint","lastOffset","maxOffset","offset","tmp","m","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","pushRun","_runStart","_runLength","mergeRuns","mergeAt","forceMergeRuns","i","start1","length1","start2","length2","k","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","Error","customCursor","customDest","sort","remaining","ts","minRun","force","module","windingLine","EPSILON","isAroundEqual","a","b","abs","contain","points","w","p","p2","p0","Clip","color","_util","isArrayLike","arraySlice","Array","prototype","slice","defaultGetter","target","key","defaultSetter","interpolateNumber","p1","percent","interpolateString","interpolateArray","out","arrDim","len","len2","j","fillArr","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","push","call","isNaN","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","v0","v1","cloneValue","ret","rgba2String","rgba","floor","join","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","propName","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","time","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","parse","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","life","loop","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","props","tracks","hasOwnProperty","during","callback","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","self","clipCount","animation","addClip","oldOnFrame","stop","forwardToLast","clipList","removeClip","done","cb","getClips","_default","zrColor","eventUtil","env","formatUtil","each","toCamelCase","vendors","gCssText","assembleTransition","duration","transitionCurve","transitionText","map","vendorPrefix","assembleFont","textStyleModel","cssText","fontSize","getTextColor","getFont","round","name","val","assembleCssText","tooltipModel","transitionDuration","backgroundColor","getModel","padding","canvasSupported","toHex","borderName","camelCase","normalizeCssArray","TooltipContent","container","api","wxa","el","document","createElement","zr","_zr","getZr","_x","getWidth","_y","getHeight","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","clearTimeout","_inContent","onmousemove","e","window","handler","normalizeEvent","dispatch","onmouseleave","hideLater","_hideDelay","constructor","stl","currentStyle","defaultView","getComputedStyle","domStyle","show","display","innerHTML","setContent","content","setEnterable","enterable","getSize","clientWidth","clientHeight","moveTo","viewportRootOffset","painter","getViewportRootOffset","offsetLeft","offsetTop","hide","setTimeout","bind","isShow","GestureMgr","_track","dist","pointPair","dx","dy","sqrt","center","recognize","root","_doTrack","_recognize","clear","touches","trackItem","touch","pos","clientToLocal","zrX","zrY","eventName","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchScale","isFinite","pinchCenter","pinchX","pinchY","matrix","vector","mIdentity","identity","isNotAroundZero","Transformable","opts","scale","origin","transformableProto","transform","needLocalTransform","updateTransform","parent","parentHasTransform","create","getLocalTransform","mul","copy","invTransform","invert","setTransform","ctx","dpr","restoreTransform","tmpTransform","decomposeTransform","sx","sy","atan2","getGlobalScale","transformCoordToLocal","v2","applyTransform","transformCoordToGlobal","rotate","Displayable","BoundingRect","imageHelper","ZImage","brush","prevEl","src","image","_image","createOrUpdateImage","onload","isImageReady","aspect","sWidth","sHeight","drawImage","text","drawRectText","getBoundingRect","_rect","inherits","_config","_model","__DEV__","makeInner","getDataItemValue","_referHelper","getCoordSysDefineBySeries","createHashMap","isArray","isString","isObject","isTypedArray","Source","assert","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SERIES_LAYOUT_BY_ROW","inner","datasetModel","data","sourceFormat","item","getSource","seriesModel","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","fromDataset","dimensionsDefine","getDatasetModel","datasetOption","completeResult","completeBySourceData","encodeDefine","encode","makeDefaultEncode","startIndex","dimensionsDetectCount","normalizeDimensionsDefine","findPotentialName","potentialNameDimIndex","arrayRowsTravelFirst","index","objectRowsCollectDimensions","colArr","value0","nameMap","displayName","exist","count","set","maxLoop","Infinity","obj","firstIndex","coordSysDefine","encodeItemName","encodeSeriesName","seriesType","subType","nSeriesMap","cSeriesMap","uid","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","coordDim","firstCategoryDimIndex","dataDim","categoryAxisMap","firstNotOrdinal","doGuessOrdinal","nameDimIndex","itemName","seriesName","thisData","getComponent","datasetIndex","guessOrdinal","dimIndex","result","dimName","sample","detectValue","row","modelUtil","finder","point","seriesIndex","getSeriesByIndex","getData","dataIndex","queryDataIndex","getItemGraphicEl","coordSys","getTooltipPosition","dataToPoint","getValues","mapDimension","clone","createListFromArray","axisHelper","axisModelCommonMixin","Model","_layout","getLayoutRect","_dataStackHelper","enableDataStack","isDimensionStacked","getStackedDimension","_completeDimensions","completeDimensions","_createDimensions","createDimensions","_symbol","createList","createSymbol","dataStack","createScale","dataExtent","isInstance","mixin","createScaleByModel","setExtent","niceScaleExtent","mixinAxisModelCommonMethods","ArrayCtor","Float32Array","m1","m2","out0","out1","out2","out3","out4","out5","translate","v","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","BaseBarSeries","dependencies","brushSelector","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","register","node","records","initGlobalListeners","record","useHandler","eventType","on","dis","makeDispatchAction","dispatchAction","dispatchTooltipFinally","pendings","initialized","curry","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","payload","pendingList","unregister","Scale","OrdinalMeta","scaleProto","OrdinalScale","init","ordinalMeta","extent","categories","_ordinalMeta","_extent","getOrdinal","rank","normalize","getTicks","ticks","getLabel","isBlank","unionExtentFromData","unionExtent","getApproximateExtent","getOrdinalMeta","niceTicks","noop","niceExtent","Style","Element","RectText","__clipPaths","__dirty","invisible","z","zlevel","draggable","dragging","culling","cursor","rectHover","progressive","incremental","inplace","beforeBrush","afterBrush","rectContain","traverse","context","coord","dirty","__zr","refresh","animateStyle","animate","attrKV","setStyle","useStyle","arrySlice","Eventful","_$handlers","one","_h","h","isSilent","off","newList","l","trigger","args","arguments","argLen","apply","splice","triggerWithContext","getMin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","setRange","resetRange","coordinateSystemCreators","CoordinateSystemManager","_coordinateSystems","coordinateSystems","creater","list","concat","getCoordinateSystems","coordinateSystemCreator","curve","vec2","bbox","devicePixelRatio","CMD","M","L","C","Q","A","Z","R","min2","max2","mathMin","mathMax","mathCos","mathSin","mathSqrt","mathAbs","hasTypedArray","PathProxy","notSaveData","_saveData","_ctx","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","getContext","beginPath","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x1","y1","x2","y2","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","x0","y0","toStatic","stroke","setLineDash","lineDash","lineDashSum","setLineDashOffset","setData","appendPath","path","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","cubicAt","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","rebuildPath","d","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","numberUtil","scaleHelper","IntervalScale","intervalScaleProto","mathCeil","ceil","mathFloor","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","date","Date","formatTime","getSetting","getFullYear","getMonth","getDate","splitNumber","minInterval","maxInterval","interval","_interval","fixMin","fixMax","approxTickNum","span","approxInterval","scaleLevelsLen","scaleLevels","level","yearSpan","yearStep","nice","timezoneOffset","getTimezoneOffset","fixExtent","_niceExtent","parseDate","methodName","model","useUTC","wx","getSystemInfoSync","browser","os","svgSupported","touchEventsSupported","worker","navigator","detect","userAgent","ua","firefox","match","ie","edge","weChat","test","version","SVGRect","pointerEventsSupported","pathTool","colorTool","Path","Image","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","IncrementalDisplayable","EMPTY_OBJ","extendShape","extendPath","pathData","extendFromString","makePath","createFromString","boundingRect","centerGraphic","resizePath","makeImage","imageUrl","img","mergePath","pathRect","calculateTransform","subPixelOptimizeLine","param","lineWidth","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","hoverSilentOnTouch","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","getFormattedLabel","isFunction","defaultText","normalStyleText","emphasisStyleText","retrieve2","setTextStyle","textStyle","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","labelModel","defaultColor","isRectText","textPosition","textOffset","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","indexOf","gTextStyleModel","trim","animateOrSetProps","isUpdate","animatableModel","animationEnabled","isAnimationEnabled","postfix","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","updateProps","initProps","getTransform","ancestor","mat","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","elMap1","getElMap","isGroup","anid","oldEl","newProp","getAnimatableProps","g","elMap","clipPointsByRect","clipRectByRect","targetRect","createIcon","iconStr","strokeNoScale","replace","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","itemStyle","styleName","normalItemStyleOpt","normal","emphasisItemStyleOpt","emphasis","merge","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","TEXT_STYLE_OPTIONS","compatEC3CommonStyles","processSeries","seriesOpt","markPoint","markLine","markArea","nodes","edgeData","links","edges","mpData","mlData","breadcrumb","levels","leaves","toArr","o","toObj","isTheme","series","axes","axisName","axisOpt","axisPointer","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geo","geoOpt","regions","regionObj","timeline","timelineOpt","toolbox","toolboxOpt","feature","featureOpt","tooltip","properties","excludes","includes","title","polygon","lineX","lineY","keep","dataView","lang","dataZoom","zoom","back","magicType","line","bar","stack","tiled","restore","saveAsImage","typeNames","pie","scatter","effectScatter","tree","treemap","boxplot","candlestick","heatmap","lines","graph","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","end","allData","partialData","isDataItemOption","_number","DefaultDataProvider","dimSize","seriesDataToSource","_source","_data","_offset","_dimSize","methods","providerMethods","providerProto","pure","persistent","arrayRows_column","getItem","appendData","appendDataSimply","arrayRows_row","objectRows","countSimply","getItemSimply","keyedColumns","col","dims","newCol","oldCol","original","typedArray","clean","rawValueGetters","arrayRows","getRawValueSimply","dataItem","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","hasItemOption","dimInfo","dimType","parseAndCollect","NaN","retrieveRawValue","getRawDataItem","getProvider","getDimensionInfo","retrieveRawAttr","fixShadow","STYLE_COMMON_PROPS","createLinearGradient","global","canvasGradient","createRadialGradient","opacity","lineDashOffset","shadowBlur","shadowOffsetX","shadowOffsetY","font","textFont","textRect","transformText","textOrigin","truncate","blend","prevStyle","firstDraw","prop","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","hasStroke","getLineScale","hasFill","otherStyle","overwrite","newStyle","getGradient","method","colorStops","addColorStop","styleProto","debugMode","OTHER_DIMENSIONS","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","dimItem","coordDimArr","coordDimIndex","isExtraCoord","mayLabelDimType","defaultTooltip","otherDim","otherDimArr","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","label","encodeTooltip","getDimensionTypeByAxis","axisType","SeriesModel","getInitialData","getMarkerPosition","pt","clampData","getLayout","size","offsetIndex","getBaseAxis","isHorizontal","legendHoverLink","barMinHeight","barMinAngle","large","progressiveChunkMode","util","_event","Dispatcher","requestAnimationFrame","Animation","options","stage","_clips","_running","_time","_pausedTime","_pauseStart","addAnimator","clips","removeAnimator","_update","getTime","delta","deferredEvents","deferredClips","step","_needsRemove","pop","fire","_startLoop","isFinished","List","_dimensionHelper","CoordinateSystem","coordSysDimDefs","coordSysName","registeredCoordSys","axisMap","getDimensionsInfo","hasNameEncode","dimInfoList","coordDimensions","generateCoord","categoryAxisModel","stackCalculationInfo","setCalculationInfo","dimValueGetter","isNeedCompleteOrdinalData","itemOpt","defaultDimValueGetter","initData","sampleItem","firstDataNotNull","transformPath","cc","vMag","vRatio","u","vAngle","acos","processArc","fa","psiDeg","xp","yp","lambda","f","cxp","cyp","createPathProxyFromString","cs","RegExp","prevCmd","arr","split","cpx","cpy","str","c","charAt","shift","parseFloat","ctlPtx","ctlPty","createPathOptions","pathProxy","buildPath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","pathBundle","RADIAN_EPSILON","_trim","linearMap","domain","clamp","subDomain","subRange","parsePercent","all","precision","returnStr","toFixed","asc","getPrecision","getPrecisionSafe","toString","eIndex","dotIndex","getPixelPrecision","pixelExtent","log","LN10","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","sum","reduce","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nf","exponent","exp10","reformIntervals","littleThan","curr","currClose","close","lg","isNumeric","_dataProvider","_format","getTooltipMarker","formatTpl","DIMENSION_LABEL_REG","getDataParams","dataType","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","getItemVisual","componentType","mainType","componentSubType","seriesId","id","marker","$vars","status","labelProp","itemModel","getItemModel","params","formatter","formatTooltip","makeStyleMapper","getLineStyle","getLineDash","lineType","dotSize","dashSize","Displayble","IncrementalDisplayble","_displayables","_temporaryDisplayables","_cursor","notClear","clearDisplaybles","addDisplayable","displayable","notPersistent","addDisplayables","displayables","eachPendingDisplayable","childRect","union","localPos","zrender","timsort","GlobalModel","ExtensionAPI","OptionManager","backwardCompat","ChartView","_throttle","throttle","seriesColor","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","toLowerCase","MessageCenter","ECharts","dom","theme","themeStorage","_dom","defaultRenderer","renderer","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","_api","createExtensionAPI","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","_pendingActions","_onframe","bindRenderedEvent","setAsPrimitive","echartsProto","doConvertPixel","coordSysList","parseFinder","_disposed","scheduler","prepare","updateMethods","flushPendingActions","triggerUpdatedEvent","unfinished","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","renderSeries","getDom","setOption","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","getOption","getDevicePixelRatio","getRenderedCanvas","pixelRatio","getSvgDataUrl","storage","getDisplayList","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","eachComponent","component","view","__viewId","ignore","url","getType","toDataURL","getConnectedDataURL","groupId","MAX_NUMBER","connectedGroups","canvasList","instances","chart","canvas","getBoundingClientRect","targetCanvas","createCanvas","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","coordSysMgr","restoreData","clearColorPalette","setBackgroundColor","colorArr","stringify","performPostUpdateFuncs","ecIns","componentDirtyList","componentView","__alive","seriesDirtyMap","eachSeries","chartView","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","updateLayout","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","query","condition","excludeSeriesId","normalizeToArray","callView","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","updateMethod","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","main","sub","pendingActions","isComponent","viewList","viewMap","doPrepare","viewId","classType","Clazz","getClass","__id","__ecComponentInfo","componentIndex","renderTask","dispose","remove","renderComponents","dirtyList","updateZ","updatePayload","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","postUpdateFuncs","func","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","MOUSE_EVENT_NAMES","elCount","blendMode","ecInstance","getComponentByElement","modelInfo","eveName","dataModel","eventData","actionType","isDisposed","setAttribute","DOM_ATTRIBUTE_KEY","idBase","groupIdBase","mapDataStores","enableConnect","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","STATUS_KEY","updateConnectedChartsStatus","charts","otherChart","otherCharts","existInstance","getInstanceByDom","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","registerLayout","layoutTask","registerVisual","visualTask","targetList","fn","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","extendComponentModel","extendSeriesModel","extendChartView","setCanvasCreator","creator","$override","registerMap","mapName","geoJson","specialAreas","features","JSON","Function","getMap","dataTool","___ec_export","scaleAndAdd","lenSquare","lengthSquare","div","dot","s","distance","distanceSquare","distSquare","negate","lerp","LRU","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","cached","op","ep","fname","substr","alpha","hsla2rgba","iv","hsla","rgba2hsla","H","S","G","B","vMin","vMax","deltaR","deltaG","deltaB","fastLerp","normalizedValue","colors","leftIndex","rightIndex","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","modifyHSL","modifyAlpha","arrColor","Gradient","findPointFromSeries","layoutUtil","globalListener","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","triggerOn","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","from","_ticket","dataByCoordSys","offsetX","offsetY","tooltipOption","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","coordSysAxesInfo","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","dataByAxis","axisIndex","axisValue","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataParams","axisId","getAxisRawValue","axisValueLabel","firstLine","encodeHTML","reverse","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","tooltipTrigger","defaultHtml","asyncTicket","tooltipOpt","subTooltipModel","html","cbTicket","viewWidth","viewHeight","contentSize","align","vAlign","viewSize","layoutRect","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","gapH","gapV","getOuterSize","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","domWidth","domHeight","gap","rectWidth","rectHeight","_clazz","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","customizeGetParent","easingFuncs","_life","_initialized","onrestart","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","_vm","$createElement","_c","_self","staticClass","staticStyle","attrs","staticRenderFns","pagevue_type_script_lang_js_","mounted","drawLine","_this","Object","then","res","code","keys","ehcratmy","er","myChart","getElementById","colorList","shadowColor","index_pagevue_type_script_lang_js_","componentNormalizer","page","__webpack_exports__","r0","PI2","globalCoord","AxisPointerModel","snap","triggerTooltip","link","animationDurationUpdate","lineStyle","shadowStyle","margin","borderColor","borderWidth","handle","icon","axisModelCreator","AxisModel","superApply","queryComponents","gridIndex","gridId","getAxisType","extraOption","_vector","v2Create","v2DistSquare","mathPow","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","onet","cubicDerivativeAt","cubicRootAt","roots","t1","disc","K","discSqrt","Y1","Y2","T","ASqrt","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","prev","next","d1","d2","_t","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","BaseAxisPointer","viewHelper","cartesianAxisHelper","AxisView","CartesianAxisPointer","makeElOption","elOption","axisPointerModel","axisPointerType","otherExtent","getCartesian","getOtherAxis","getGlobalExtent","pixelValue","elStyle","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","layoutInfo","buildCartesianSingleLabelElOption","getHandleTransform","labelMargin","getTransformedPosition","updateHandleTransform","axisExtent","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","verticalAlign","targetShape","makeLineShape","getAxisDimIndex","shadow","bandWidth","getBandWidth","makeRectShape","registerAxisPointerClass","fixClipWithShadow","clockwise","unitX","unitY","dev","addCommas","colorPaletteMixin","dataFormatMixin","getLayoutParams","mergeLayoutParam","_task","createTask","legendDataProvider","visualColorAccessPath","layoutMode","extraOpt","dataTask","dataTaskCount","reset","dataTaskReset","mergeDefaultAndTheme","wrapData","dataBeforeProcessed","autoSeriesName","inputPositionParams","themeSubType","hasClass","getTheme","getDefaultOption","defaultEmphasis","fillDataTextStyle","newSeriesOption","getRawData","task","getCurrentTask","getLinkedData","modifyOutputEnd","setOutputEnd","outputData","multipleSeries","formatArrayValue","vertially","setEachItem","dimHead","valStr","tooltipDims","formatSingleValue","tooltipDimLen","isValueArr","formattedValue","colorEl","isNameSpecified","getColorFromPalette","scope","requestColorNum","coordDimToDataDim","getAxisTooltipData","pipeTask","preventIncremental","pipelineContext","getSeriesAutoName","dataDims","nameArr","cloneShallow","dataTaskProgress","CHANGABLE_METHODS","wrapMethod","onDataSelfChange","pipeline","getPipeline","currentTask","agentStubMap","smoothSpline","smoothBezier","smooth","controlPoints","smoothConstraint","cp1","cp2","getBorderLineDash","r1","r2","r3","r4","total","_axisHelper","ifAxisCrossZero","estimateLabelUnionRect","Cartesian2D","Axis2D","isAxisUsedInTheGrid","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","otherAxis","otherAxes","onZeroAxisIndex","canOnZeroToAxis","updateAxisTransform","coordBase","getExtent","axisExtentSum","toLocalCoord","axisPointerEnabled","_updateScale","ignoreContainLabel","gridRect","getBoxLayoutParams","axesList","adjustAxes","inverse","labelUnionRect","getAxis","axesMapOnDim","getAxes","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","pointToData","coordToData","xAxisModel","getReferringComponents","yAxisModel","coordsList","axisPositionUsed","axesCount","createAxisCreator","isCategory","onBand","addAxis","isCartesian2D","axesModels","findAxesModels","getTooltipAxes","baseAxes","baseAxis","axesTypes","grids","Pattern","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","config","clearColor","motionBlur","lastFrameAlpha","__used","__drawIndex","__startIndex","__endIndex","getElementCount","initContext","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","clearRect","__canvasGradient","getCanvasPattern","save","fillRect","globalImageCache","findExistImage","newImageOrSrc","cachedImgObj","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","isDomLevel2","addEventListener","MOUSE_EVENT_REG","calculate","defaultGetZrXY","layerX","layerY","box","clientX","clientY","isTouch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","attachEvent","removeEventListener","detachEvent","preventDefault","stopPropagation","cancelBubble","returnValue","notLeftMouse","DataDiffer","UNDEFINED","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","CtorUint32Array","Uint32Array","CtorUint16Array","Uint16Array","getIndicesCtor","_rawCount","cloneChunk","originalChunk","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","_calculationInfo","hostModel","dimensionInfos","dimensionNames","invertedIndicesMap","dimensionInfo","dimensionName","createInvertedIndices","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","prepareInvertedIndex","invertedIndices","getRawValueFromStore","rawIndex","chunkSize","chunkIndex","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","getId","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","getDimension","getDimensionsOnCoord","dimensionsSummary","nameList","notProvider","_nameRepeatCount","_dimValueGetter","_initDataFromProvider","rawData","nameDimIdx","dimLen","dimensionInfoMap","idList","rawExtent","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","DataCtor","resizeChunkArray","newStore","dimStorage","dimRawExtent","nameDim","nameDimChunk","getIndices","indices","thisCount","buffer","chunkStore","getByRawIndex","rawIdx","dimStore","_getFast","values","hasValue","getDataExtent","dimData","initialExtent","dimExtent","currEnd","useRaw","setApproximateExtent","getCalculationInfo","getSum","getMedian","dimDataArray","sortedDimDataArray","rawIndexOf","indexOfName","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","contextCompat","filterSelf","dim0","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","otherList","thisList","visual","setVisual","setLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","dimensionInfoList","injectFunction","originalMethod","TRANSFERABLE_METHODS","v2Distance","interpolate","isLoop","segs","w2","w3","TYPE_DELIMITER","IS_CONTAINER","checkClassType","RootClass","mandatoryMethods","$constructor","proto","superClass","ExtendedClass","superCall","classBase","Clz","classAttr","enableClassManagement","entity","makeContainer","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","ignoreSize","subtext","subtarget","itemGap","subtextStyle","titleModel","subtextStyleModel","textBaseline","textEl","subText","subTextEl","sublink","open","groupRect","layoutOption","alignStyle","axisPointerModelHelper","_axisPointer","axisPointerClass","fixValue","updateAxisPointer","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","_helper","setLabel","barItemStyle","BAR_BORDER_WIDTH_QUERY","_updateDrawMode","coordinateSystemType","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","incrementalRender","_incrementalRenderLarge","isLargeDraw","isHorizontalOrRadial","oldData","animationModel","elementCreator","updateStyle","newIndex","oldIndex","removeRect","removeSector","execute","createLarge","cartesian2d","rectShape","animateProperty","animateTarget","polar","isRadial","sector","sectorShape","fixedLineWidth","getLineWidth","signX","signY","isPolar","itemStyleModel","getBarItemStyle","setShape","cursorStyle","labelPositionOutside","rawLayout","LargePath","startPoint","__startPoint","valueIdx","__valueIdx","setLargeStyle","_curve","containStroke","_l","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","getScaleExtent","axisDataLen","boundaryGap","scaleType","originalExtent","getCategories","setBlank","isBaseAxisAndHasBarSeries","barSeriesModels","barWidthAndOffset","adjustedScale","adjustScaleForOverflow","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","base","setInterval","makeLabelFormatter","labelFormatter","getLabelModel","categoryTickStart","tpl","tickValue","tick","realNumberScaleTicks","tickCount","categoryScaleExtent","axisLabelModel","unrotatedSingleRect","getTextRect","singleRect","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","rotatedRect","guid","Handler","Storage","Painter","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","delInstance","rendererType","vml","handerProxy","getViewportRoot","_needsRefresh","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","configLayer","zLevel","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","eventHandler","_component","getUID","dataProcessorHandlers","visualHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","__pipeline","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","performArgs","block","pipelineId","skip","performRawSeries","isSeriesFiltered","taskRecord","_pipelineMap","pCtx","progressiveEnabled","progressiveRender","__idxInPipeline","blockIndex","modDataCount","modBy","dataLen","threshold","pipelineMap","head","tail","pipe","stageTaskMap","createSeriesStageTask","overallReset","createOverallStageTask","__block","getUpstream","getTargetSeries","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","createOnAllSeries","eachRawSeries","eachRawSeriesByType","removeKey","overallTaskReset","overallProgress","createStub","stubReset","onDirty","stubOnDirty","agent","getSeries","upstreamContext","stubProgress","getDownstream","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","dataEach","progress","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","eachSeriesByType","cond","componentUtil","boxLayoutMixin","dependentModels","themeModel","newCptOption","isInit","fields","optList","Class","getDependencies","deps","unshift","enableSubTypeDefaulter","enableTopologicalTravel","BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","arrayProto","nativeForEach","forEach","nativeFilter","filter","nativeSlice","nativeMap","nativeReduce","typeStr","isPrimitive","isDom","targetProp","sourceProp","isBuiltInObject","mergeAll","targetAndSources","overlay","baseClazz","clazzPrototype","F","memo","find","nodeType","ownerDocument","value1","retrieve3","value2","message","primitiveKey","HashMap","isArr","thisMap","visit","concatArray","newArray","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","triggerEvent","axisLine","symbol","symbolSize","axisTick","inside","axisLabel","showMinLabel","showMaxLabel","splitLine","splitArea","areaStyle","axisDefault","categoryAxis","deduplication","alignWithLabel","valueAxis","timeAxis","logAxis","logBase","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","textContain","textHelper","normalizeTextStyle","needDrawText","renderText","getStroke","SHADOW_PROPS","globalDefault","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","initBase","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","newOption","componentsMap","newCptTypes","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","determineSubType","getComponentsByTypes","resultItem","ComponentModelClass","createSeriesIndices","componentOption","topologicalTravel","_seriesIndicesMap","_seriesIndices","isIdInner","cpts","isIdArray","cpt","isNameArray","filterBySubType","findComponents","queryCond","getQueryCond","doFilter","q","indexAttr","idAttr","nameAttr","components","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeriesCount","assertSeriesInitialized","rawSeriesIndex","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","isNotTargetSeries","seiresIndex","mergeTheme","notMergeColorLayer","colorLayer","themeItem","existComponent","seriesModels","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","echartsAPIList","chartInstance","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","Axis","fixExtentWithBands","nTick","fixOnBandTicksCoords","ticksCoords","tickCategoryInterval","ticksLen","last","ticksItem","containData","getTicksCoords","tickModel","getTickModel","getViewLabels","labels","getRotate","normalizeRadian","angle","sysDims","dimsDef","encodeDef","dataDimNameMap","coordDimNameMap","dimCount","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","sysDimItemDimsDefItem","generateCoordCount","fromZero","extra","genName","optDimCount","dir","x_","polyHelper","ORIGIN_METHOD","RATE","THROTTLE_TYPE","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","thisDelay","thisDebounce","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","lastRate","subTypeDefaulters","registerSubTypeDefaulter","defaulter","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","noEntryList","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","targetNameList","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","platform","gradientColor","animationDuration","animationEasingUpdate","animationThreshold","hoverLayerThreshold","shadowTemp","orignalBrush","modified","clipPaths","clipPath","helper","roundNumber","_intervalPrecision","thisExtent","other","getInterval","getIntervalPrecision","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","fetch","fetchers","singleAxis","singleAxisModel","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","parallelModel","parallelAxisIndex","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","err","originalVal","_needCollect","needCollect","_deduplication","_map","createByAxisModel","dedplication","getOrCreateMap","category","containLabel","safeLimit","largeLayout","_a","_b","_s","v2ApplyTransform","lt","rb","lb","rt","maxX","maxY","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","textColor","maskColor","mask","lineCap","labelRect","animateShape","getAreaStyle","v2Min","v2Max","v2Scale","v2Add","v2Clone","v2Sub","constraint","prevPoint","nextPoint","cps","d0","cp0","createRenderPlanner","STACK_PREFIX","LARGE_BAR_MIN_WIDTH","LargeArr","getSeriesStackId","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","isOnCartesian","isInLargeMode","barSeries","seriesInfoList","barWidth","barMaxWidth","barGap","barCategoryGap","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueDim","baseDim","stacked","isValueAxisH","valueAxisStart","getValueAxisStart","baseValue","sign","baseCoord","valueAxisHorizontal","valueDimIdx","largePoints","valuePair","tmpRect","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","thisOption","__ordinalMeta","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","SymbolClz","symbolType","inBundle","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","keepAspect","symbolPath","setColor","roundRectHelper","VALID_TEXT_ALIGN","VALID_TEXT_VERTICAL_ALIGN","normalizeStyle","makeFont","renderRichText","renderPlainText","setCtx","DEFAULT_FONT","contentBlock","__textCotentBlock","parsePlainText","outerHeight","textLines","lineHeight","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","adjustTextY","textX","textY","needDrawBg","needDrawBackground","outerWidth","boxX","adjustTextX","drawBackground","getTextXForPadding","getFill","strokeText","fillText","parseRichText","drawRichText","contentWidth","xLeft","lineTop","xRight","token","tokens","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","tokenStyle","isLineHolder","isPlainBg","onBgImageLoaded","blockHeiht","adjustTextPositionOnRect","maxValue","lastIndexOf","_node_modules_mini_css_extract_plugin_dist_loader_js_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_page_vue_vue_type_style_index_0_id_6e35a626_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","extraCssText","crossStyle","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","pointAt","tangentAt","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","beforeUpdate","afterUpdate","userSetClipPath","currentClipPath","parentClipPath","children","_children","__storage","addChildrenToStorage","delChildrenFromStorage","_renderList","displayableSortFunc","clazzUtil","Component","componentProto","dimensionsCount","format","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesCount","seriesLabel","seriesTpl","getSeriesTypeName","displayCnt","dataLabels","keyValues","userConfig","Animatable","animators","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","Region","decode","json","UTF8Encoding","encodeScale","UTF8Scale","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","prevX","prevY","charCodeAt","featureObj","geometries","exterior","interiors","region","cp","colorAll","getDefaultLabel","labelDims","vals","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","Draggable","_dragStart","_drag","_dragEnd","topTarget","draggingTarget","_draggingTarget","dispatchToElement","drift","dropTarget","lastDropTarget","_dropTarget","axisTrigger","collect","pathContain","pathProxyForDraw","strokeContainThreshold","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","dirtyPath","__clipTarget","Sub","defaultShape","thisShape","Cartesian","getAxesByScale","axisX","axisY","reserved","xScale","yScale","xAxisExtent","yAxisExtent","originalLarge","originalProgressive","axesInfo","seriesInvolved","coordSysMap","collectAxesInfo","collectSeriesInfo","globalAxisPointerModel","linksOption","linkGroups","coordSysKey","makeKey","axesInfoInCoordSys","coordSysModel","baseTooltipModel","saveTooltipAxisInfo","triggerAxis","cross","tooltipAxes","fromTooltip","axisPointerShow","isHandleTrigger","makeAxisPointerModel","involveSeries","axisInfo","useHandle","groupIndex","getLinkGroupIndex","linkGroup","mapper","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","seriesTooltipTrigger","seriesTooltipShow","seriesDataCount","linkOption","checkPropInLink","linkPropValue","axisPropValue","getAxisInfo","TOUCH_CLICK_DELAY","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","proxy","gestureMgr","_gestureMgr","gestureEvent","setTouchTimer","instance","_touching","_touchTimer","domHandlers","mousemove","mouseout","element","toElement","relatedTarget","parentNode","touchstart","_lastTouchMoment","mousedown","touchmove","touchend","mouseup","click","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","_handlers","HandlerDomProxy","mountHandlers","handlerNames","handlerDomProxyProto","setCursor","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","output","stackInfoMap","stackInfoList","stackInfo","stackResultDimension","stackedOverDimension","stackedDimension","stackedByDimension","isStackedByIndex","calculateStack","targetStackInfo","idxInStack","resultVal","resultNaN","targetData","byValue","stackedDataRawIndex","stackedOver","SILENT","makeEventPacket","eveType","targetInfo","EmptyProxy","painterRoot","_hovered","setHandlerProxy","isHover","lastHovered","lastHoveredTarget","hovered","hoveredTarget","innerDom","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","AxisPointerView","paths","_updatePathDirty","LinkedList","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","setClipPath","removeClipPath","cubic","quadratic","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","windingArc","containPath","isStroke","repeat","createPattern","eventTool","throttleUtil","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","doClear","buildLabel","xy","wh","xDimIndex","idStart","makeCategoryLabels","makeRealNumberLabels","makeCategoryTicks","makeCategoryLabelsActually","labelCategoryInterval","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","getOptionCategoryInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","ticksCache","optionTickInterval","labelsResult","labelItem","formattedLabel","rawLabel","cache","autoInterval","fetchAutoCategoryIntervalCalculationParams","axisRotate","ordinalScale","ordinalExtent","unitSpan","unitW","unitH","maxW","maxH","dw","dh","lastAutoInterval","lastTickCount","categoryInterval","onlyTick","startTick","showMinMax","addItem","tVal","DUMMY_COMPONENT_NAME_PREFIX","subOpts","subOptName","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","dataIndices","otherDataIndices","lenj","isData","innerUniqueIndex","hostObj","has","parsedKey","queryType","includeMainTypes","queryParam","setting","_setting","_isBlank","childAt","childOfName","childCount","_doAdd","addBefore","nextSibling","eachChild","includeChildren","tmpMat","extremity","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","getNearestColorPalette","paletteNum","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","_labelHelper","hoverLabelModel","fixPosition","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","measureText","getRichTextRect","getPlainTextRect","halfHeight","truncateText","containerWidth","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","getLineHeight","truncOuterHeight","truncOuterWidth","lastIndex","matchedIndex","pushTokens","substring","contentHeight","stlPadding","truncateWidth","truncateHeight","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","paddingW","remianTruncWidth","isEmptyStr","strs","tokensLen","renderPlanner","Chart","renderTaskPlan","renderTaskReset","highlight","toggleHighlight","downplay","chartProto","elSetState","state","progressMethodMap","forceFirstProgress","modelHelper","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","outputAxesInfo","valItem","highDownKey","lastHighlights","newHighlights","toHighlight","toDownplay","coordExtent","HOVER_LAYER_ZLEVEL","CANVAS_ZLEVEL","EL_AFTER_INCREMENTAL_INC","INCREMENTAL_INC","parseInt10","isLayerValid","__builtin__","viewRect","isDisplayableCulled","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","_width","_height","mainLayer","_domRoot","_getSize","_hoverlayer","_hoverElements","isSingleCanvas","viewportRoot","paintAll","_redrawId","_paintList","_backgroundColor","__hoverMir","elMirror","__from","hoverElements","hoverLayer","getLayer","originalEl","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","eachBuiltinLayer","virtual","layerList","zi","useTimer","now","firstEl","error","dTime","prevElClipPaths","draw","currentLayer","forcePaint","insertLayer","layersMap","prevLayer","prevDom","insertBefore","firstChild","eachLayer","getLayers","updatePrevLayer","incrementalLayerCount","_clearLayer","layerConfig","_zlevel","delLayer","removeChild","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","whIdx","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","upperCaseFirst","group1","replaceReg","replaceMap","&","<",">","\"","'","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","paramsList","seriesLen","alias","formatTplSimple","pad","isUTC","utc","capitalFirst","stackedByDimInfo","stackedDimInfo","byIndex","stackedCoordDimension","mayStack","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","isCalculationCoord","stackedDim","targetDim","mathAtan2","nPoint","contrastColor","axisCommon","legend","iconStyle","visualMap","controlStyle","color0","borderColor0","AxisBuilder","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","getGroup","_splitAreaColors","_splitLine","splitLineModel","lineStyleModel","lineColors","lineCount","tickCoord","colorIndex","_splitArea","splitAreaModel","areaStyleModel","areaColors","areaColorsLen","lastSplitAreaColors","newSplitAreaColors","cIndex","polygonContain","loopGeo","transformTo","define","Task","_reset","_plan","_onDirty","_dirty","taskProto","planResult","upTask","_upstream","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","_dueEnd","_outputDueEnd","_progress","_dueIndex","doProgress","outputDueEnd","_settedOutputEnd","iterator","current","winCount","it","sStep","sCount","modNext","sequentialNext","taskIns","_callingProgress","downstream","_downstream","downTask","LOCATION_PARAMS","HV_NAMES","boxLayout","orient","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","newline","moveY","vbox","hbox","getAvailableSize","positionInfo","containerRect","containerHeight","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","elPos","sizeCalculable","hvIdx","targetOption","hResult","vResult","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","hasProp","copyLayoutParams","matrixUtil","makeAxisEventDataBase","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","pt1","pt2","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","axisTickLabel","tickEls","buildAxisTick","labelEls","buildAxisLabel","fixMinMaxLabelShow","labelLayout","axisNameAvailableWidth","gapSignal","isNameLocationCenter","nameRotation","innerTextLayout","endTextLayout","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","targetType","axisRotation","rotationDiff","textRotate","onLeft","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","firstRect","nextRect","mRotationBack","tickLen","tickEl","axisLabelShow","labelRotation","rawCategoryData","itemLabelModel","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","clockWise","pointerColor","dataRange","componentName","colorAccessPath","graphicUtil","PATH_COLOR","styleModel","buildLabelElOption","labelPos","paddings","confineInContainer","bgColor","seriesData","textLayout","makeSectorShape"],"mappings":"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","file":"static/js/chunk-7027.c327e9a8.js","sourcesContent":["var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","var ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function () {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;","var BaseBarSeries = require(\"./BaseBarSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect',\n\n  /**\n   * @override\n   */\n  getProgressive: function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  },\n\n  /**\n   * @override\n   */\n  getProgressiveThreshold: function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function () {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 5e3,\n    progressiveChunkMode: 'mod',\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //      show: false\n    // },\n    itemStyle: {},\n    emphasis: {}\n  }\n});\n\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.1.0';\nvar dependencies = {\n  zrender: '4.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('d2-container',[_c('div',{staticClass:\"chart\",staticStyle:{\"width\":\"95%\",\"height\":\"95%\"}},[_c('div',{style:({width: '95%', height: '95%'}),attrs:{\"id\":\"myChart\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <d2-container>\n    <div style=\"width: 95%;height: 95%;\" class=\"chart\">\n      <div id=\"myChart\" :style=\"{width: '95%', height: '95%'}\"></div>\n    </div>\n  </d2-container>\n</template>\n<script>\n  import { statistics } from '../../plugin/axios/api.js';\n  import { Myerror } from '../../plugin/axios/er.js';\n  // 引入基本模板\n  let echarts = require('echarts/lib/echarts')\n  // 引入柱状图组件\n  require('echarts/lib/chart/bar')\n  // 引入提示框和title组件\n  require('echarts/lib/component/tooltip')\n  require('echarts/lib/component/title')\n  export default {\n    data() {\n      return {\n\n      }\n    },\n    mounted() {\n      this.drawLine();\n    },\n    methods: {\n      drawLine() {\n        statistics().then(res => {\n          console.log(res);\n          let key = [], val = [];\n          if (res.code == 200) {\n            for (const keys in res.data) {\n              key.push(keys)\n              val.push(res.data[keys])\n            }\n            // console.log(key, val);\n            this.ehcratmy(key, val)\n          }\n          Myerror(res, this)\n        })\n\n      },\n      ehcratmy(key, val) {\n        // 基于准备好的dom，初始化echarts实例\n        let myChart = echarts.init(document.getElementById('myChart'))\n        // 绘制图表\n        myChart.setOption({\n          title: { text: '数据统计' },\n          tooltip: {},\n          xAxis: {\n            data: key\n          },\n          yAxis: {},\n          series: [{\n            name: '银行流水',\n            type: 'bar',\n            data: val,\n            itemStyle: {\n              //通常情况下：\n              normal: {\n                //每个柱子的颜色即为colorList数组里的每一项，如果柱子数目多于colorList的长度，则柱子颜色循环使用该数组\n                color: function (params) {\n                  var colorList = ['rgb(164,205,238)', 'rgb(42,170,227)', 'rgb(25,46,94)', 'rgb(195,229,235)'];\n                  return colorList[params.dataIndex];\n                }\n              },\n              //鼠标悬停时：\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            },\n          }]\n        });\n      }\n    }\n  }\n</script>\n<style lang=\"scss\" scoped>\n  @import '~@/assets/style/public.scss';\n  .index-btn-group {\n    color: $color-text-placehoder;\n    span {\n      color: $color-text-sub;\n      &:hover {\n        color: $color-text-main;\n      }\n    }\n  }\n\n  .chart {\n    position: absolute;\n  }\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./page.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./page.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./page.vue?vue&type=template&id=6e35a626&scoped=true&\"\nimport script from \"./page.vue?vue&type=script&lang=js&\"\nexport * from \"./page.vue?vue&type=script&lang=js&\"\nimport style0 from \"./page.vue?vue&type=style&index=0&id=6e35a626&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6e35a626\",\n  null\n  \n)\n\nexport default component.exports","import page from './page'\n\nexport default page\n","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxis ? [otherAxis] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxis;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxis = otherAxes[onZeroAxisIndex];\n    }\n\n    return;\n  } // Find the first available other axis.\n\n\n  for (var idx in otherAxes) {\n    if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx])) {\n      otherAxis = otherAxes[idx];\n      break;\n    }\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined'; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n\n      if (val < dimRawExtent[0]) {\n        dimRawExtent[0] = val;\n      }\n\n      if (val > dimRawExtent[1]) {\n        dimRawExtent[1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var sector = new graphic.Sector({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var valueIdx = this.__valueIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[this.__valueIdx] = points[i + valueIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var valueIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - valueIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __valueIdx: valueIdx\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data);\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5 // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {number} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, result.tickCategoryInterval, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, tickCategoryInterval, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var shift = ticksCoords[1].coord - ticksCoords[0].coord;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n      var tickCategoryInterval = tickCategoryInterval || 0; // Avoid split a single data item when odd interval.\n\n      if (tickCategoryInterval % 2 > 0) {\n        ticksItem.coord -= shift / ((tickCategoryInterval + 1) * 2);\n      }\n    });\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1];\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0; // If (x, y) on the line, considered as \"contain\".\n\n  return x_ === x ? Infinity : x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","var numberUtil = require(\"../util/number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\nvar largeLayout = _barGrid.largeLayout;\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(layout, 'bar')); // Should after normal bar layout, otherwise it is blocked by normal bar layout.\n\necharts.registerLayout(largeLayout);\necharts.registerVisual({\n  seriesType: 'bar',\n  reset: function (seriesModel) {\n    // Visual coding for legend\n    seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n  }\n});","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var largePoints = new LargeArr(params.count * 2);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var offset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord);\n        largePoints[offset++] = coord[0];\n        largePoints[offset++] = coord[1];\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n}\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return zrUtil.indexOf(baseAxis.getAxesOnZeroOf(), valueAxis) >= 0 || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./page.vue?vue&type=style&index=0&id=6e35a626&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./page.vue?vue&type=style&index=0&id=6e35a626&lang=scss&scoped=true&\"","var echarts = require(\"../../echarts\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","var completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Polar is also calculated in assumptive linear layout here.\n    // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showMinMax = {\n    min: labelModel.get('showMinLabel'),\n    max: labelModel.get('showMaxLabel')\n  };\n\n  if (showMinMax.min && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (showMinMax.max && tickValue !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n} // Can be null|'auto'|number|function\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;","var clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar _labelHelper = require(\"../helper/labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label');\n  var hoverLabelModel = itemModel.getModel('emphasis.label');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer;\n    mainLayer.zlevel = CANVAS_ZLEVEL; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function () {\n    this._splitAreaColors = null;\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitAreaModel,\n      clamp: true\n    });\n\n    if (!ticksCoords.length) {\n      return;\n    } // For Making appropriate splitArea animation, the color and anid\n    // should be corresponding to previous one if possible.\n\n\n    var areaColorsLen = areaColors.length;\n    var lastSplitAreaColors = this._splitAreaColors;\n    var newSplitAreaColors = zrUtil.createHashMap();\n    var colorIndex = 0;\n\n    if (lastSplitAreaColors) {\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n        if (cIndex != null) {\n          colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n          break;\n        }\n      }\n    }\n\n    var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prev;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n        prev = x + width;\n      } else {\n        x = gridRect.x;\n        y = prev;\n        width = gridRect.width;\n        height = tickCoord - y;\n        prev = y + height;\n      }\n\n      var tickValue = ticksCoords[i - 1].tickValue;\n      tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: tickValue != null ? 'area_' + tickValue : null,\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      colorIndex = (colorIndex + 1) % areaColorsLen;\n    }\n\n    this._splitAreaColors = newSplitAreaColors;\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticksCoords[i].tickValue,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;"],"sourceRoot":""}